import base64
import pathlib
import random
import threading

from selenium import webdriver

JPEG_PREFIX = 'data:image/jpeg;base64,'
FOUND_NOTHING = r''
GO_AWAY = r''


class ImageSearcher:
    def __init__(self, result_path: pathlib.Path = ''):
        self._result_path = result_path
        self._lock = threading.Lock()
        opts = webdriver.FirefoxOptions()
        opts.add_argument('--headless')
        opts.add_argument('--width=200')
        opts.add_argument('--height=200')
        self._firefox = webdriver.Firefox(executable_path=str(pathlib.Path(__file__).parent / 'geckodriver'),
                                          options=opts)

    def search_image(self, search_query):
        if self._lock.locked():
            return base64.b64decode(GO_AWAY)

        with self._lock:
            search_query = search_query or 'newest meme'
            url = "https://www.google.co.in/search?q=" + search_query + "&source=lnms&tbm=isch"
            print(f'Trying to get this: {url}')

            self._firefox.get(url)
            images = self._firefox.find_elements_by_xpath("//div[@class='islrc']//div[contains(concat(' ', @class, ' '), ' islir ')]//img")
            print(f'Got {len(images)} images!')
            if len(images) == 0:
                return base64.b64decode(FOUND_NOTHING)
            src = random.choice(images).get_attribute('src')
            if src is not None and src.startswith(JPEG_PREFIX):
                return base64.b64decode(src[len(JPEG_PREFIX):])


if __name__ == '__main__':
    res_path = pathlib.Path.cwd() / 'results'
    res_path.mkdir(exist_ok=True)
    searcher = ImageSearcher(res_path)
    searcher.search_image('ORA ORA')
